{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\visa_card_project\\\\server\\\\ReactStripeTutorial\\\\web\\\\src\\\\components\\\\PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport axios from 'axios';\nimport React, { useState } from \"react\";\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      color: \"#fff\",\n      fontWeight: 500,\n      fontFamily: \"monospace\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#fff\"\n    }\n  }\n};\nexport const PaymentForm = () => {\n  _s();\n\n  const [succes, setSucces] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async e => {\n    e.prevenDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:4000/payment\", {\n          amount: 1000,\n          id\n        });\n\n        if (response.data.succes) {\n          console.log(\"Succesfull payment\");\n          setSucces(true);\n        }\n      } catch (error) {\n        console.log(error.message);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !succes ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"formGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormRow\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            options: CARD_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"PAY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Payment succesfull\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(PaymentForm, \"9R5SEEXnEw7NmWpR35KR9rPykw0=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["D:/visa_card_project/server/ReactStripeTutorial/web/src/components/PaymentForm.js"],"names":["CardElement","useElements","useStripe","axios","React","useState","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","PaymentForm","succes","setSucces","stripe","elements","handleSubmit","e","prevenDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","amount","data","console","log","message"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAuBC,WAAvB,EAAqCC,SAArC,QAAsD,yBAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AAEA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,SAAS,EAAE,OADK;AAEhBC,EAAAA,KAAK,EAAC;AACFC,IAAAA,IAAI,EAAG;AACHC,MAAAA,SAAS,EAAE,SADR;AAEHC,MAAAA,KAAK,EAAE,MAFJ;AAGHC,MAAAA,UAAU,EAAE,GAHT;AAIHC,MAAAA,UAAU,EAAE,WAJT;AAKHC,MAAAA,QAAQ,EAAE,MALP;AAMZC,MAAAA,aAAa,EAAE,aANH;AAOZ,2BAAqB;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAPT;AAQZ,uBAAiB;AAAEA,QAAAA,KAAK,EAAE;AAAT;AARL,KADL;AAWFK,IAAAA,OAAO,EAAE;AACLN,MAAAA,SAAS,EAAE,SADN;AAELC,MAAAA,KAAK,EAAE;AAFF;AAXP;AAFU,CAApB;AAqBA,OAAO,MAAMM,WAAW,GAAE,MAAI;AAAA;;AAC1B,QAAM,CAACC,MAAD,EAAUC,SAAV,IAAuBd,QAAQ,CAAC,KAAD,CAArC;AACA,QAAMe,MAAM,GAAGlB,SAAS,EAAxB;AACA,QAAMmB,QAAQ,GAAGpB,WAAW,EAA5B;;AAEA,QAAMqB,YAAY,GAAE,MAAOC,CAAP,IAAY;AAC5BA,IAAAA,CAAC,CAACC,aAAF;AACA,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAyB,MAAMN,MAAM,CAACO,mBAAP,CAA2B;AAC5DC,MAAAA,IAAI,EAAE,MADsD;AAE5DC,MAAAA,IAAI,EAAER,QAAQ,CAACS,UAAT,CAAoB9B,WAApB;AAFsD,KAA3B,CAArC;;AAKA,QAAG,CAACyB,KAAJ,EAAU;AACN,UAAG;AACC,cAAM;AAACM,UAAAA;AAAD,YAAOL,aAAb;AACA,cAAMM,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,IAAN,CAAW,+BAAX,EAA6C;AAChEC,UAAAA,MAAM,EAAG,IADuD;AAEhEH,UAAAA;AAFgE,SAA7C,CAAvB;;AAIA,YAAIC,QAAQ,CAACG,IAAT,CAAcjB,MAAlB,EAAyB;AACrBkB,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAlB,UAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,OAVD,CAWA,OAAMM,KAAN,EAAY;AACRW,QAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,OAAlB;AAEH;AACJ,KAhBD,MAiBQ;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,OAAlB;AACH;AACR,GA3BD;;AA4BA,sBACI;AAAA,cACC,CAACpB,MAAD,gBACD;AAAM,MAAA,QAAQ,EAAEI,YAAhB;AAAA,8BACI;AAAU,QAAA,SAAS,EAAC,WAApB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACI,QAAC,WAAD;AAAa,YAAA,OAAO,EAAEhB;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,gBAWD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAZA,mBADJ;AAmBH,CApDM;;GAAMW,W;UAEMf,S,EACED,W;;;KAHRgB,W","sourcesContent":["import { CardElement , useElements , useStripe } from \"@stripe/react-stripe-js\";\r\nimport axios from 'axios'\r\nimport React , {useState} from \"react\";\r\n\r\nconst CARD_OPTIONS ={\r\n    iconStyle: \"solid\" , \r\n    style:{\r\n        base : {\r\n            iconColor: \"#c4f0ff\" ,\r\n            color: \"#fff\" ,\r\n            fontWeight: 500,        \r\n            fontFamily: \"monospace\" ,\r\n            fontSize: \"16px\",\r\n\t\t\tfontSmoothing: \"antialiased\",\r\n\t\t\t\":-webkit-autofill\": { color: \"#fce883\" },\r\n\t\t\t\"::placeholder\": { color: \"#87bbfd\" }\r\n        } , \r\n        invalid: {\r\n            iconColor: \"#ffc7ee\" , \r\n            color: \"#fff\"\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const PaymentForm =()=>{\r\n    const [succes , setSucces] = useState(false);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const handleSubmit= async (e) =>{\r\n        e.prevenDefault()\r\n        const {error ,paymentMethod} = await stripe.createPaymentMethod({\r\n            type: \"card\",\r\n            card: elements.getElement(CardElement)\r\n        })\r\n\r\n        if(!error){ \r\n            try{\r\n                const {id} = paymentMethod\r\n                const response = await axios.post(\"http://localhost:4000/payment\" , {\r\n                    amount : 1000,\r\n                    id\r\n                })\r\n                if (response.data.succes){\r\n                    console.log(\"Succesfull payment\");\r\n                    setSucces(true)\r\n                }\r\n            }\r\n            catch(error){\r\n                console.log(error.message)\r\n\r\n            }\r\n        }\r\n            else{\r\n                console.log(error.message)\r\n            }\r\n    }\r\n    return(\r\n        <>\r\n        {!succes ? \r\n        <form onSubmit={handleSubmit}>\r\n            <fieldset className=\"formGroup\">\r\n                <div className=\"FormRow\">\r\n                    <CardElement options={CARD_OPTIONS}/>\r\n                </div>\r\n\r\n            </fieldset>\r\n            <button>PAY</button>\r\n        </form>\r\n        :\r\n        <div>\r\n            <h2>Payment succesfull</h2>\r\n        </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}